import asyncio
from app.database import async_session_maker
from app.achievements.models import Achievement
from sqlalchemy import select, update

async def fix_holiday_names():
    async with async_session_maker() as session:
        print("üéÑ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–ô –ü–†–ê–ó–î–ù–ò–ß–ù–´–• –î–û–°–¢–ò–ñ–ï–ù–ò–ô")
        print("=" * 60)
        
        # –ú–∞–ø–ø–∏–Ω–≥ –Ω–∞–∑–≤–∞–Ω–∏–π
        name_mapping = {
            '–° –ù–æ–≤—ã–º –≥–æ–¥–æ–º 2025': '–° –ù–æ–≤—ã–º –≥–æ–¥–æ–º',
            '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å 2025': '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å',
            '–ú—É–∂—Å–∫–æ–π –¥–µ–Ω—å 2025': '–ú—É–∂—Å–∫–æ–π –¥–µ–Ω—å'
        }
        
        fixed_count = 0
        
        for old_name, new_name in name_mapping.items():
            # –ù–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ä—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
            result = await session.execute(
                select(Achievement).where(Achievement.name == old_name)
            )
            achievement = result.scalar_one_or_none()
            
            if achievement:
                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                await session.execute(
                    update(Achievement)
                    .where(Achievement.id == achievement.id)
                    .values(name=new_name)
                )
                print(f"‚úÖ '{old_name}' -> '{new_name}'")
                fixed_count += 1
            else:
                print(f"‚ùå '{old_name}' - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        await session.commit()
        
        print(f"\nüìä –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–π: {fixed_count}")
        
        # –¢–µ–ø–µ—Ä—å –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏ —Å —Ç–∏–ø–∞–º–∏
        print("\nüîó –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏ —Å —Ç–∏–ø–∞–º–∏...")
        
        result = await session.execute(
            select(Achievement).where(Achievement.achievement_type_id.is_(None))
        )
        achievements = result.scalars().all()
        
        if not achievements:
            print("‚úÖ –í—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç —Ç–∏–ø!")
        else:
            print(f"‚ö†Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å {len(achievements)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –±–µ–∑ —Ç–∏–ø–∞:")
            for a in achievements:
                print(f"   ‚Ä¢ {a.name}")

if __name__ == "__main__":
    asyncio.run(fix_holiday_names())

