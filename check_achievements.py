import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import async_session_maker
from sqlalchemy import text

async def check_achievements():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    async with async_session_maker() as session:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ achievements
            count_query = text("SELECT COUNT(*) FROM achievements")
            result = await session.execute(count_query)
            count = result.scalar()
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {count}")
            
            if count > 0:
                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                achievements_query = text("""
                    SELECT id, uuid, name, user_id, status, 
                           user_training_id, user_program_id, program_id,
                           created_at, updated_at
                    FROM achievements 
                    ORDER BY created_at DESC
                """)
                result = await session.execute(achievements_query)
                achievements = result.fetchall()
                
                print(f"\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:")
                print("=" * 80)
                for achievement in achievements:
                    print(f"ID: {achievement[0]}")
                    print(f"UUID: {achievement[1]}")
                    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {achievement[2]}")
                    print(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {achievement[3]}")
                    print(f"–°—Ç–∞—Ç—É—Å: {achievement[4]}")
                    print(f"ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {achievement[5]}")
                    print(f"ID –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {achievement[6]}")
                    print(f"ID –ø—Ä–æ–≥—Ä–∞–º–º—ã: {achievement[7]}")
                    print(f"–°–æ–∑–¥–∞–Ω–æ: {achievement[8]}")
                    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {achievement[9]}")
                    print("-" * 40)
            else:
                print("üì≠ –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø—É—Å—Ç–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {e}")

if __name__ == "__main__":
    asyncio.run(check_achievements())


