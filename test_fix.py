#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—à–∏–±–æ–∫
"""

import asyncio
import httpx
import time


async def test_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    url = "http://127.0.0.1:8000/user_trainings/"
    params = {
        "user_program_uuid": "d02e8d12-5756-47f2-afd3-88cca3c97ef3",
        "page": 1,
        "page_size": 10
    }
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    print(f"üì° URL: {url}")
    print("-" * 50)
    
    async with httpx.AsyncClient() as client:
        start_time = time.time()
        response = await client.get(url, params=params)
        end_time = time.time()
        execution_time = end_time - start_time
        
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.3f} —Å–µ–∫—É–Ω–¥")
        print(f"üìà –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 401:
            print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (401 - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)")
            print("‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ —Å lazy loading!")
        elif response.status_code == 200:
            print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π!")
            print("‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ —Å lazy loading!")
        elif response.status_code == 500:
            print("‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
        
        print("-" * 50)
        print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")


if __name__ == "__main__":
    print("=" * 50)
    print("üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    asyncio.run(test_fix()) 