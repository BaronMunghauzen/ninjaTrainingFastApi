import asyncio
from app.database import async_session_maker
from app.achievements.models import AchievementType
from sqlalchemy import select

async def check_holiday_types():
    async with async_session_maker() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —Ç–∏–ø—ã
        holiday_names = ['–° –ù–æ–≤—ã–º –≥–æ–¥–æ–º', '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å', '–ú—É–∂—Å–∫–æ–π –¥–µ–Ω—å']
        
        for name in holiday_names:
            result = await session.execute(
                select(AchievementType).where(AchievementType.name == name)
            )
            achievement_type = result.scalar_one_or_none()
            
            if achievement_type:
                print(f"‚úÖ {name} - –Ω–∞–π–¥–µ–Ω (ID: {achievement_type.id})")
            else:
                print(f"‚ùå {name} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∏–ø—ã —Å "2025" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
        result = await session.execute(
            select(AchievementType).where(AchievementType.name.like('%2025%'))
        )
        types_2025 = result.scalars().all()
        
        print(f"\nüéØ –¢–∏–ø—ã —Å '2025' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏: {len(types_2025)}")
        for t in types_2025:
            print(f"   ‚Ä¢ {t.name}")

if __name__ == "__main__":
    asyncio.run(check_holiday_types())

