"""Initial revision

Revision ID: b8e1ec94b26b
Revises: 
Create Date: 2025-07-09 22:45:28.712452

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8e1ec94b26b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('caption')
    )
    op.create_index(op.f('ix_categories_uuid'), 'categories', ['uuid'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_user', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('exercise_type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('muscle_group', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_uuid'), 'exercise', ['uuid'], unique=True)
    op.create_table('program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('actual', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('program_type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_program_uuid'), 'program', ['uuid'], unique=True)
    op.create_table('training',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('training_type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('muscle_group', sa.String(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_uuid'), 'training', ['uuid'], unique=True)
    op.create_table('user_program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_program_uuid'), 'user_program', ['uuid'], unique=True)
    op.create_table('exercise_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('training_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('exercises', sa.Text(), server_default=sa.text("'[]'"), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('muscle_group', sa.String(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_group_uuid'), 'exercise_group', ['uuid'], unique=True)
    op.create_table('user_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('training_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('training_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PASSED', 'SKIPPED', 'ACTIVE', 'BLOCKED_YET', name='exercisestatus'), nullable=False),
    sa.Column('set_number', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_exercise_uuid'), 'user_exercise', ['uuid'], unique=True)
    op.create_table('user_training',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_program_id', sa.Integer(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('training_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('training_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PASSED', 'SKIPPED', 'ACTIVE', 'BLOCKED_YET', name='trainingstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_program_id'], ['user_program.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_training_uuid'), 'user_training', ['uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_training_uuid'), table_name='user_training')
    op.drop_table('user_training')
    op.drop_index(op.f('ix_user_exercise_uuid'), table_name='user_exercise')
    op.drop_table('user_exercise')
    op.drop_index(op.f('ix_exercise_group_uuid'), table_name='exercise_group')
    op.drop_table('exercise_group')
    op.drop_index(op.f('ix_user_program_uuid'), table_name='user_program')
    op.drop_table('user_program')
    op.drop_index(op.f('ix_training_uuid'), table_name='training')
    op.drop_table('training')
    op.drop_index(op.f('ix_program_uuid'), table_name='program')
    op.drop_table('program')
    op.drop_index(op.f('ix_exercise_uuid'), table_name='exercise')
    op.drop_table('exercise')
    op.drop_table('user')
    op.drop_index(op.f('ix_categories_uuid'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
