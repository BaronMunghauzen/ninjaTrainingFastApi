"""add_user_measurements_tables

Revision ID: b053d472d7ab
Revises: 4f840777d22e
Create Date: 2025-09-13 21:51:46.546269

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b053d472d7ab'
down_revision: Union[str, Sequence[str], None] = '4f840777d22e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Создаем таблицу user_measurement_types
    op.create_table('user_measurement_types',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('actual', sa.Boolean(), nullable=False),
        sa.Column('data_type', sa.Enum('system', 'custom', name='measurementtypeenum'), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('caption', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('caption', 'user_id', name='uq_measurement_type_caption_user')
    )
    
    # Создаем таблицу user_measurements
    op.create_table('user_measurements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('actual', sa.Boolean(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('measurement_type_id', sa.Integer(), nullable=False),
        sa.Column('measurement_date', sa.Date(), nullable=False),
        sa.Column('value', sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(['measurement_type_id'], ['user_measurement_types.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Создаем индексы
    op.create_index(op.f('ix_user_measurement_types_id'), 'user_measurement_types', ['id'], unique=False)
    op.create_index(op.f('ix_user_measurement_types_uuid'), 'user_measurement_types', ['uuid'], unique=True)
    op.create_index(op.f('ix_user_measurements_id'), 'user_measurements', ['id'], unique=False)
    op.create_index(op.f('ix_user_measurements_uuid'), 'user_measurements', ['uuid'], unique=True)
    
    # Добавляем запись "Вес" в таблицу user_measurement_types
    op.execute("""
        INSERT INTO user_measurement_types (uuid, created_at, updated_at, actual, data_type, user_id, caption)
        VALUES (gen_random_uuid(), NOW(), NOW(), true, 'system', NULL, 'Вес')
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Удаляем индексы
    op.drop_index(op.f('ix_user_measurements_uuid'), table_name='user_measurements')
    op.drop_index(op.f('ix_user_measurements_id'), table_name='user_measurements')
    op.drop_index(op.f('ix_user_measurement_types_uuid'), table_name='user_measurement_types')
    op.drop_index(op.f('ix_user_measurement_types_id'), table_name='user_measurement_types')
    
    # Удаляем таблицы
    op.drop_table('user_measurements')
    op.drop_table('user_measurement_types')
    
    # Удаляем enum
    op.execute("DROP TYPE IF EXISTS measurementtypeenum")
    
    # ### end Alembic commands ###
