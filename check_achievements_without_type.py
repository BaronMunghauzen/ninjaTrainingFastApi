import asyncio
from app.database import async_session_maker
from app.achievements.models import Achievement
from sqlalchemy import select

async def check_achievements_without_type():
    async with async_session_maker() as session:
        # –ù–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –±–µ–∑ achievement_type_id
        result = await session.execute(
            select(Achievement).where(Achievement.achievement_type_id.is_(None))
        )
        achievements = result.scalars().all()
        
        print(f"üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–Ø –ë–ï–ó –¢–ò–ü–ê: {len(achievements)}")
        print("=" * 50)
        
        for achievement in achievements:
            print(f"‚Ä¢ {achievement.name} (ID: {achievement.id}, UUID: {achievement.uuid})")
        
        if not achievements:
            print("‚úÖ –í—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–º–µ—é—Ç —Ç–∏–ø!")
        else:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(achievements)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –±–µ–∑ —Ç–∏–ø–∞")
            print("üí° –ù—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å –∏—Ö —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ç–∏–ø–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ achievement_types")

if __name__ == "__main__":
    asyncio.run(check_achievements_without_type())

